zstyle ':prezto:module:terminal' auto-title 'yes'
zstyle ':prezto:module:terminal:window-title' format '%~ > %s'

eval "$(sheldon source)"
eval "$(starship init zsh)"

# General configuration
autoload -U compinit && compinit
autoload -U promptinit && promptinit

setopt autocd               # cd without writing cd
setopt extended_glob        # extended glob syntax
setopt nomatch              # print error if pattern matches nothing
setopt notify               # report status of background jobs immediately

# Key stuff
bindkey -e
bindkey "^[[1;3C" forward-word  # alt-right
bindkey "^[[1;3D" backward-word # alt-left
bindkey "^[[1;5C" forward-word  # ctrl-right
bindkey "^[[1;5D" backward-word # ctrl-left
bindkey "^[[3~" delete-char     # del
bindkey "^[3;5~" delete-char    # alt-del
bindkey -s "^[[6~" ""           # ignore page-down
bindkey -s "^[[5~" ""           # ignore page-up

# Misc exports
export DOOL_OPTS="--bytes"

# History
HISTFILE=~/.zsh_history
HISTSIZE=100000
SAVEHIST=$HISTSIZE
setopt inc_append_history   # write to history immediately
setopt hist_ignore_dups     # ignore second instance of same event
setopt share_history        # share history between session
setopt extended_history     # special history format with timestamp
setopt no_hist_beep         # fucking beep
setopt hist_ignore_space    # ignore entries with leading space


# Completion

setopt complete_in_word     # complete from both ends of a word
setopt always_to_end        # move cursor to the end of a completed word
setopt path_dirs            # perform path search even on command names with slashes
setopt auto_menu            # show completion menu on a succesive tab press
setopt auto_list            # automatically list choices on ambiguous completion
setopt auto_param_slash     # if completed parameter is a directory, add a trailing slash
unsetopt menu_complete      # do not autoselect the first completion entry
unsetopt flow_control       # disable start/stop characters in shell editor

## Group matches and describe.
zstyle ':completion:*:*:*:*:*' menu select
zstyle ':completion:*:matches' group 'yes'
zstyle ':completion:*:options' description 'yes'
zstyle ':completion:*:options' auto-description '%d'
zstyle ':completion:*:corrections' format ' %F{green}-- %d (errors: %e) --%f'
zstyle ':completion:*:descriptions' format ' %F{yellow}-- %d --%f'
zstyle ':completion:*:messages' format ' %F{purple} -- %d --%f'
zstyle ':completion:*:warnings' format ' %F{red}-- no matches found --%f'
zstyle ':completion:*:default' list-prompt '%S%M matches%s'
zstyle ':completion:*' format ' %F{yellow}-- %d --%f'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' verbose yes
zstyle ':completion:*' rehash true  # Find new commands automatically

## Fuzzy match mistyped completions.
zstyle ':completion:*' completer _complete _match _approximate
zstyle ':completion:*:match:*' original only
zstyle ':completion:*:approximate:*' max-errors 1 numeric

## Directories
eval $(dircolors)
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*:*:cd:*' tag-order local-directories directory-stack path-directories
zstyle ':completion:*:*:cd:*:directory-stack' menu yes select
zstyle ':completion:*:-tilde-:*' group-order 'named-directories' 'path-directories' 'users' 'expand'
zstyle ':completion:*' squeeze-slashes true

## History
zstyle ':completion:*:history-words' stop yes
zstyle ':completion:*:history-words' remove-all-dups yes
zstyle ':completion:*:history-words' list false
zstyle ':completion:*:history-words' menu yes

# Correction

setopt correct              # spelling correction for commands
#setopt correctall           # spelling correction for arguments


# Misc aliases
alias ls='eza --classify=auto'
alias ll='eza -lg --classify=auto'
alias la='eza -lga --classify=auto'
alias ip='ip -color=auto'
alias diff='diff --color=auto'
alias e='eza --classify=auto'
alias ee='eza -lg --classify=auto --git'
alias grep='grep --color=auto'
alias sys='sudo systemctl'
alias sysu='systemctl --user'
alias locate='plocate'
alias myips='curl -4 icanhazip.com && curl -6 icanhazip.com'

# Git aliases
alias gpf='git push --force-with-lease'
alias gpu='git publish'
alias gra='git rebase --autostash'
alias grc='git rebase --continue'
alias gra='git rebase --abort'
alias gsc='git switch -c'
alias grh='git reset --hard'
alias gpa='git pull --autostash'

# Sudo shortcuts
alias svim='sudo vim'
alias spacman='sudo pacman'

# Arch stuff
alias pkgbuild='pkgbuild build'
alias offload='pkgctl build --offload'
alias db-update='pkgctl db update'

# Translations
alias t="trans de:en"
alias te="trans :en"

# SSH
alias ssh="TERM=xterm-256color ssh"
alias hcloud="TERM=xterm-256color hcloud"

# zoxide
source <(zoxide init zsh)


# ssh keys
eval $(keychain --eval --timeout 600 --agents ssh -Q --quiet --noask arch_ed25519 id_ed25519 skeletonkey_ed25519)
alias auth='eval $(keychain --eval --timeout 600 --agents ssh -Q --quiet arch_ed25519 id_ed25519 skeletonkey_ed25519)'


# fzf

# enables CTRL-T and CTRL-R fuzzy stuff
source /usr/share/fzf/key-bindings.zsh

# unbind ALT-C because we don't want that
bindkey -r '\ec'

# fdd - cd to selected directory
fdd() {
  local dir
  dir=$(find ${1:-*} -path '*/\.*' -prune \
                  -o -type d -print 2> /dev/null | fzf +m) &&
  cd "$dir"
}

# fdr - cd to selected parent directory
fdr() {
  local declare dirs=()
  get_parent_dirs() {
    if [[ -d "${1}" ]]; then dirs+=("$1"); else return; fi
    if [[ "${1}" == '/' ]]; then
      for _dir in "${dirs[@]}"; do echo $_dir; done
    else
      get_parent_dirs $(dirname "$1")
    fi
  }
  local DIR=$(get_parent_dirs $(realpath "${1:-$(pwd)}") | fzf-tmux --tac)
  cd "$DIR"
}

eval "$(atuin init zsh)"

sshhcloud() {
  hcloud server ssh $1 -o StrictHostKeyChecking=no -i ~/.ssh/work/hcloud_sshkey
}

scrambleimage() {
  new_name=$(shuf -er -n20  {A..Z} {a..z} {0..9} | tr -d '\n')
  old_ext=${1##*.}
  new_file=${new_name}.${old_ext}
  exiftool -o ${new_file} -overwrite_original -all= "$1"
  echo ${new_file}
}
